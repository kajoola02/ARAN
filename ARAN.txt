<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Community Alert & Safety App</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body { font-family: Arial, sans-serif; background: #f4f6fa; margin: 0; }
    header { background: #d32f2f; color: white; padding: 1em 0; text-align: center; }
    nav { display: flex; justify-content: center; gap: 1em; background: #fbeaea; }
    nav button { border: none; background: none; font-size: 1em; padding: 1em; cursor: pointer; color: #d32f2f; }
    nav button.active { border-bottom: 2px solid #d32f2f; font-weight: bold; }
    main { max-width: 600px; margin: 2em auto; background: white; padding: 2em; border-radius: 8px; box-shadow: 0 2px 8px #0001; }
    h2 { color: #d32f2f; }
    form { display: flex; flex-direction: column; gap: 0.8em; margin-top: 1em; }
    input, textarea { padding: 0.6em; border: 1px solid #bbb; border-radius: 4px; }
    button[type="submit"], .call-btn, .emergency-btn { background: #d32f2f; color: white; border: none; border-radius: 4px; padding: 0.7em 1.3em; cursor: pointer; }
    .alert, .incident, .center { margin-bottom: 1em; border-left: 4px solid #d32f2f; padding: 0.7em 1em; background: #fdeaea; }
    .center { display: flex; justify-content: space-between; align-items: center; }
    .emergency-btn {
      width: 100%;
      font-size: 1.3em;
      font-weight: bold;
      background: #d32f2f;
      color: white;
      border: none;
      border-radius: 6px;
      margin: 1em 0 2em 0;
      padding: 1em;
      transition: background 0.2s;
    }
    .emergency-btn:hover { background: #b71c1c; }
    .emergency-modal-bg {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0; top: 0; width: 100vw; height: 100vh;
      background: rgba(0,0,0,0.6);
      justify-content: center;
      align-items: center;
    }
    .emergency-modal-bg.active { display: flex; }
    .emergency-modal {
      background: #fff;
      padding: 2em;
      border-radius: 10px;
      min-width: 260px;
      box-shadow: 0 4px 32px #0002;
      text-align: center;
      max-width: 95vw;
    }
    .emergency-modal h3 { color: #d32f2f; margin-top: 0; }
    .emergency-contacts {
      margin-top: 1em;
      display: flex;
      flex-direction: column;
      gap: 1em;
      align-items: stretch;
    }
    .emergency-contact-btn {
      background: #d32f2f;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 0.8em;
      font-size: 1em;
      cursor: pointer;
      text-decoration: none;
      display: block;
      text-align: left;
      transition: background 0.2s;
    }
    .emergency-contact-btn:hover { background: #b71c1c; }
    .close-modal {
      margin-top: 1.5em;
      background: #bbb;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 0.5em 1.2em;
      cursor: pointer;
    }
    /* Alarm/Timer styles */
    .alarm-modal-bg {
      display: none;
      position: fixed;
      z-index: 2000;
      left: 0; top: 0; width: 100vw; height: 100vh;
      background: rgba(200,0,0,0.18);
      justify-content: center;
      align-items: center;
    }
    .alarm-modal-bg.active { display: flex; }
    .alarm-modal {
      background: #fff;
      border: 2px solid #d32f2f;
      border-radius: 12px;
      padding: 2em 1.2em 1.2em 1.2em;
      text-align: center;
      max-width: 90vw;
      box-shadow: 0 0 22px #d32f2f55;
      position: relative;
      animation: shake .32s infinite;
    }
    @keyframes shake {
      0% { transform: translate(2px, 2px);}
      25% { transform: translate(-2px, 1px);}
      50% { transform: translate(-2px, -2px);}
      75% { transform: translate(2px, -1px);}
      100% { transform: translate(2px, 2px);}
    }
    .alarm-title {
      color: #d32f2f; font-weight: bold; font-size: 1.2em; margin-bottom: 0.7em;
    }
    .timer-count {
      font-size: 2.5em;
      color: #d32f2f;
      margin: 0.4em auto 0.3em auto;
      font-weight: bold;
      letter-spacing: 0.03em;
      text-shadow: 0 0 5px #fbd1d1;
    }
    .alarm-details {
      color: #b71c1c;
      font-size: 1.07em;
      margin-bottom: 1.1em;
    }
    .alarm-btn-off {
      background: #d32f2f;
      color: #fff;
      border: none;
      border-radius: 4px;
      padding: 0.7em 2.3em;
      font-size: 1em;
      font-weight: bold;
      cursor: pointer;
      transition: background .15s;
      margin-bottom: 0.7em;
    }
    .alarm-btn-off:hover { background: #b71c1c; }
    .alarm-note {
      font-size: 0.98em;
      color: #333;
      margin-top: 0.8em;
    }
    @media (max-width: 700px) {
      main { padding: 1em; }
    }
  </style>
</head>
<body>
  <header>
    <h1>Community Alert & Safety App</h1>
  </header>
  <nav>
    <button id="tab-alerts" class="active" onclick="showTab('alerts')">Emergency</button>
    <button id="tab-report" onclick="showTab('report')">Report Incident</button>
    <button id="tab-centers" onclick="showTab('centers')">Help Centers</button>
    <button id="tab-history" onclick="showTab('history')">History</button>
  </nav>
  <main>
    <!-- Emergency Button Tab -->
    <section id="panel-alerts">
      <h2>Emergency Alert</h2>
      <button class="emergency-btn" onclick="showEmergencyModal()">üö® EMERGENCY! CONTACT HELP CENTERS</button>
      <div style="color:#555; margin-bottom:2em;">
        Press the button to quickly contact nearby police stations or hospitals in case of emergency.
      </div>
      <div style="background:#fdeaea; border-left:4px solid #d32f2f; padding:1em 1em 1em 1.2em; border-radius:8px; margin-bottom:1em;">
<h3 style="color:#d32f2f;">Vehicle Accident Detection Demo</h3>
      <div style="color:#555; margin-bottom:1em;">
        <b>Simulation:</b> Click <b>‚ÄúSimulate Accident Detection‚Äù</b> to test the 2-minute alarm and auto-alert workflow.<br>
        (In real use, this is triggered by the vehicle's sensors via IoT.)
      </div>
        <button class="emergency-btn" style="width:auto; margin:1em 0 0 0;" onclick="triggerSimulatedImpact()">üî¥ Simulate Vehicle Impact (Demo)</button>
      </div>
    </section>
    <!-- Report Incident Tab -->
    <section id="panel-report" style="display:none;">
      <h2>Report an Incident</h2>
      <form id="incident-form">
        <input type="text" id="incident-location" placeholder="Location" required>
        <textarea id="incident-desc" placeholder="Describe the incident..." rows="3" required></textarea>
        <button type="submit">Submit</button>
      </form>
      <div id="report-success" style="color:green; margin-top:1em; display:none;">Incident reported!</div>
    </section>
    <!-- Help Centers Tab -->
    <section id="panel-centers" style="display:none;">
      <h2>Nearby Help Centers</h2>
      <div id="centers-list"></div>
    </section>
    <!-- History Tab -->
    <section id="panel-history" style="display:none;">
      <h2>Incident History</h2>
      <div id="history-list"></div>
    </section>
  </main>
  <!-- Emergency modal -->
  <div class="emergency-modal-bg" id="emergency-modal-bg">
    <div class="emergency-modal">
      <h3>Emergency Contacts</h3>
      <div style="color:#333; font-size:1.08em;">Call or reach out to a help center immediately:</div>
      <div class="emergency-contacts" id="emergency-contacts-list"></div>
      <button class="close-modal" onclick="closeEmergencyModal()">Close</button>
    </div>
  </div>
  <!-- Alarm/Timer Modal -->
  <div class="alarm-modal-bg" id="alarm-modal-bg">
    <div class="alarm-modal">
      <div class="alarm-title">üö® Possible Accident Detected!</div>
      <div id="timer-count" class="timer-count">02:00</div>
      <div class="alarm-details" id="alarm-details">
        Vehicle ID: <b>AB12-XYZ</b><br>
        Driver: <b>John Doe</b><br>
        Location: <span id="alarm-location">Detecting...</span>
      </div>
      <button class="alarm-btn-off" onclick="turnOffAlarm()">Turn Off Alarm</button>
      <div class="alarm-note">
        <b>Alert will be sent to nearest hospital and police station if not turned off in 2 minutes.</b>
      </div>
      <audio id="alarm-audio" loop src="https://cdn.pixabay.com/audio/2022/03/15/audio_115b9b3e2e.mp3"></audio>
    </div>
  </div>
  <script>
    // --- Tab logic ---
    function showTab(tab) {
      ['alerts', 'report', 'centers', 'history'].forEach(t => {
        document.getElementById('panel-' + t).style.display = (t === tab) ? 'block' : 'none';
        document.getElementById('tab-' + t).classList.toggle('active', t === tab);
      });
    }

    // Centers data
    const helpCenters = [
      { name: "R-7 K.K Nagar Police Station", address: "36, Pilayar Koil Street, Raja Salai, Near Sivan Park, K. K. Nagar, Chennai ‚Äì 600095", phone: "044 2366 1763", type: "Police" },
      { name: "K M Speciality Hospital", address: "Opposite Canara Bank, K. K. Nagar, Chennai - 600078", phone: "099627 77777", type: "Hospital" },
    
    ];
    let incidentHistory = [];

    // --- Emergency Modal Logic ---
    function showEmergencyModal() {
      renderEmergencyContacts();
      document.getElementById('emergency-modal-bg').classList.add('active');
    }
    function closeEmergencyModal() {
      document.getElementById('emergency-modal-bg').classList.remove('active');
    }
    // Render contacts in the modal
    function renderEmergencyContacts() {
      const container = document.getElementById('emergency-contacts-list');
      container.innerHTML = '';
      // Only show police stations and hospitals as primary emergency contacts
      helpCenters.filter(center =>
        center.type === "Police" || center.type === "Hospital"
      ).forEach(center => {
        const div = document.createElement('div');
        div.innerHTML = `
          <a class="emergency-contact-btn" href="tel:${center.phone}">
            üìû ${center.type}: <strong>${center.name}</strong><br>
            <span style="font-size:0.98em; color:#eee;">${center.address}</span>
          </a>
        `;
        container.appendChild(div);
      });
    }

    // --- Help Centers Render ---
    function renderCenters() {
      const container = document.getElementById('centers-list');
      container.innerHTML = '';
      helpCenters.forEach(center => {
        const div = document.createElement('div');
        div.className = 'center';
        div.innerHTML = `
          <div>
            <strong>${center.name}</strong><br>
            <span>${center.address}</span><br>
            <span>Phone: ${center.phone}</span>
          </div>
          <a class="call-btn" href="tel:${center.phone}">Call</a>
        `;
        container.appendChild(div);
      });
    }

    // --- Report Incident ---
    document.getElementById('incident-form').onsubmit = function(e) {
      e.preventDefault();
      const location = document.getElementById('incident-location').value;
      const desc = document.getElementById('incident-desc').value;
      const time = new Date().toLocaleString();
      incidentHistory.unshift({ location, desc, time });
      document.getElementById('incident-form').reset();
      document.getElementById('report-success').style.display = 'block';
      setTimeout(() => { document.getElementById('report-success').style.display = 'none'; }, 1800);
      renderHistory();
    };

    // --- Incident History Render ---
    function renderHistory() {
      const container = document.getElementById('history-list');
      container.innerHTML = '';
      if (incidentHistory.length === 0) {
        container.innerHTML = "<em>No incidents reported yet.</em>";
        return;
      }
      incidentHistory.forEach(inc => {
        const div = document.createElement('div');
        div.className = 'incident';
        div.innerHTML = `<strong>${inc.desc}</strong><br>
          <span>Location: ${inc.location}</span><br>
          <span>Reported: ${inc.time}</span>`;
        container.appendChild(div);
      });
    }

    // --- Alarm / Timer / Emergency Automation Logic ---
    let alarmTimer = null;
    let alarmTimeLeft = 120; // seconds
    let alarmActive = false;

    // Replace these with real vehicle/driver info in production
    const VEHICLE_ID = "AB12-XYZ";
    const DRIVER_NAME = "John Doe";

    function triggerSimulatedImpact() {
      if(alarmActive) return; // Already active
      alarmActive = true;
      alarmTimeLeft = 120;
      document.getElementById('alarm-modal-bg').classList.add('active');
      document.getElementById('timer-count').textContent = "02:00";
      document.getElementById('alarm-details').innerHTML =
        `Vehicle ID: <b>${VEHICLE_ID}</b><br>Driver: <b>${DRIVER_NAME}</b><br>Location: <span id="alarm-location">Detecting...</span>`;
      playAlarmSound();
      getLocationForAlarm();
      alarmTimer = setInterval(() => {
        alarmTimeLeft--;
        let min = Math.floor(alarmTimeLeft/60), sec = alarmTimeLeft%60;
        document.getElementById('timer-count').textContent = `${min<10?"0":""}${min}:${sec<10?"0":""}${sec}`;
        if(alarmTimeLeft<=0) {
          clearInterval(alarmTimer);
          alarmTimer = null;
          sendEmergencyAlert();
          stopAlarmSound();
          setTimeout(()=>{closeAlarmModal();}, 2000);
        }
      }, 1000);
    }
    function turnOffAlarm() {
      if(alarmTimer) clearInterval(alarmTimer);
      alarmTimer = null;
      stopAlarmSound();
      alarmActive = false;
      closeAlarmModal();
      alert("Alarm turned off. No emergency alert sent.");
    }
    function closeAlarmModal() {
      document.getElementById('alarm-modal-bg').classList.remove('active');
      alarmActive = false;
    }
    function playAlarmSound() {
      let audio = document.getElementById('alarm-audio');
      audio.currentTime = 0;
      audio.play().catch(()=>{}); // In case of autoplay block, user action needed
    }
    function stopAlarmSound() {
      let audio = document.getElementById('alarm-audio');
      audio.pause();
      audio.currentTime = 0;
    }
    function sendEmergencyAlert() {
      // Simulate sending alert -- in real app, send via backend/API/SMS etc.
      let locationText = document.getElementById('alarm-location').textContent || "Unknown";
      let info =
        `üö® Emergency Alert Sent!\nVehicle ID: ${VEHICLE_ID}\nDriver: ${DRIVER_NAME}\nLocation: ${locationText}\n\nAlert sent to:\n- ${helpCenters[0].name} (${helpCenters[0].phone})\n- ${helpCenters[1].name} (${helpCenters[1].phone})`;
      alert(info);
    }
    // Geolocation
    function getLocationForAlarm() {
      if(!navigator.geolocation) {
        document.getElementById('alarm-location').textContent = "Not supported";
        return;
      }
      navigator.geolocation.getCurrentPosition(
        pos => {
          let lat = pos.coords.latitude.toFixed(5);
          let lng = pos.coords.longitude.toFixed(5);
          document.getElementById('alarm-location').textContent = `${lat}, ${lng}`;
        },
        err => {
          document.getElementById('alarm-location').textContent ="Unavailable";
        }
      );
    }
 
    // --- Initial Render ---
    renderCenters();
    renderHistory();
  </script>
</body>
</html>